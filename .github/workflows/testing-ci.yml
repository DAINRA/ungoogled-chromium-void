name: Testing CI
concurrency: kongou

on:
  pull_request:
    types: [ labeled, synchronize ]
    branches: [ testing, master ]

jobs:
  setup:
    name: Setup build
    runs-on: [ self-hosted ]
    if: contains(github.event.pull_request.labels.*.name, 'CI')
    environment:
      name: testing
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          path: master

      - name: Xlint
        run: |
          xlint master/ungoogled-chromium/template

      - name: Update void-packages
        run: |
          cd void-packages
          git pull

      - name: Configure void-packages
        run: |
          cp -rv master/etc/* void-packages/etc
          rm -rv void-packages/srcpkgs/ungoogled-chromium
          cp -rv master/ungoogled-chromium void-packages/srcpkgs
  
      - name: Bootstrap x86_64
        id: x86_64
        run: |
          cd void-packages
          ./xbps-src bootstrap-update

      - name: Bootstrap x86_64-musl
        id: x86_64-musl
        if: steps.x86_64.outcome == 'success'
        run: |
          cd void-packages
          ./xbps-src -m masterdir-musl bootstrap-update

      - name: Mount local ccache
        if: steps.x86_64.outcome == 'success' && steps.x86_64-musl.outcome == 'success'
        run: |
          mount void-packages/hostdir/ccache

  build-x86_64:
    name: Build x86_64
    runs-on: [ self-hosted ]
    timeout-minutes: 1440
    needs: [ setup ]
    outputs:
      filename: ${{ steps.build.outputs.filename }}
      hash: ${{ steps.build.outputs.hash }}
    steps:
      - name: Do build
        id: build
        run: |
          cd void-packages
          ./xbps-src pkg ungoogled-chromium
          cd hostdir/binpkgs
          PKG_FILE=$(basename ungoogled-chromium-*.x86_64.xbps)
          PKG_HASH=$(sha256sum $PKG_FILE)
          echo "::set-output name=filename::$PKG_FILE"
          echo "::set-output name=hash::$PKG_HASH"

  build-x86_64-musl:
    name: Build x86_64-musl
    runs-on: [ self-hosted ]
    timeout-minutes: 1440
    needs: [ setup, build-x86_64 ]
    outputs:
      filename: ${{ steps.build.outputs.filename }}
      hash: ${{ steps.build.outputs.hash }}
    steps:
      - name: Do build
        id: build
        run: |
          cd void-packages
          ./xbps-src -m masterdir-musl pkg ungoogled-chromium
          cd hostdir/binpkgs
          PKG_FILE=$(basename ungoogled-chromium-*.x86_64-musl.xbps)
          PKG_HASH=$(sha256sum $PKG_FILE)
          echo "::set-output name=filename::$PKG_FILE"
          echo "::set-output name=hash::$PKG_HASH"

  clean:
    name: Cleanup
    runs-on: [ self-hosted ]
    needs: [ setup, build-x86_64, build-x86_64-musl ]
    if: always() && needs.setup.result == 'success'
    steps:
      - name: Unmount local cache
        id: unmount
        run: |
          sync; umount void-packages/hostdir/ccache

