name: Create new release
concurrency: kongou

on:
  pull_request:
    types: [ closed ]
    branches: [ master ]
    paths: [ 'ungoogled-chromium/**' ]

jobs:
  setup:
    name: Setup build
    runs-on: [ self-hosted ]
    if: github.event.pull_request.merged == true && !contains(github.event.head_commit.message, 'ci skip')
    environment:
      name: release
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          path: master

      - name: Checkout void-packages
        uses: actions/checkout@v2
        with:
          repository: void-linux/void-packages
          path: void-packages

      - name: Configure void-packages
        run: |
          cp -rv master/etc/* void-packages/etc
          cp -rv master/ungoogled-chromium void-packages/srcpkgs
  
      - name: Bootstrap x86_64
        id: x86_64
        run: |
          cd void-packages
          ./xbps-src binary-bootstrap

      - name: Bootstrap x86_64-musl
        id: x86_64-musl
        if: steps.x86_64.outcome == 'success'
        run: |
          cd void-packages
          ./xbps-src -m masterdir-musl binary-bootstrap x86_64-musl

      - name: Mount local ccache
        if: steps.x86_64.outcome == 'success' && steps.x86_64-musl.outcome == 'success'
        run: |
          mount void-packages/hostdir/ccache

  build-x86_64:
    name: Build x86_64
    runs-on: [ self-hosted ]
    timeout-minutes: 1440
    needs: [ setup ]
    outputs:
      filename: ${{ steps.build.outputs.filename }}
      hash: ${{ steps.build.outputs.hash }}
    steps:
      - name: Do build
        id: build
        run: |
          cd void-packages
          ./xbps-src pkg ungoogled-chromium
          cd hostdir/binpkgs
          PKG_FILE=$(basename ungoogled-chromium-*.x86_64.xbps)
          PKG_HASH=$(sha256sum $PKG_FILE)
          echo "::set-output name=filename::$PKG_FILE"
          echo "::set-output name=hash::$PKG_HASH"

  build-x86_64-musl:
    name: Build x86_64-musl
    runs-on: [ self-hosted ]
    timeout-minutes: 1440
    needs: [ setup, build-x86_64 ]
    outputs:
      filename: ${{ steps.build.outputs.filename }}
      hash: ${{ steps.build.outputs.hash }}
    steps:
      - name: Do build
        id: build
        run: |
          cd void-packages
          ./xbps-src -m masterdir-musl pkg ungoogled-chromium
          cd hostdir/binpkgs
          PKG_FILE=$(basename ungoogled-chromium-*.x86_64-musl.xbps)
          PKG_HASH=$(sha256sum $PKG_FILE)
          echo "::set-output name=filename::$PKG_FILE"
          echo "::set-output name=hash::$PKG_HASH"

  release:
    name: Create Release
    runs-on: [ self-hosted ]
    needs: [ build-x86_64, build-x86_64-musl ]
    steps:
      - id: version
        run: |
          echo "::set-output name=version::$(echo ${{ needs.build-x86_64.outputs.filename }} | sed 's/.*-\([0-9\.]\+_[0-9]\+\).*/\1/')"

      - id: hash
        run: |
          cd void-packages/hostdir/binpkgs
          echo "${{ needs.build-x86_64.outputs.hash }}" | sha256sum -c
          echo "${{ needs.build-x86_64-musl.outputs.hash }}" | sha256sum -c

      - name: Create new release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: Release v${{ steps.version.outputs.version }}
          tag_name: v${{ steps.version.outputs.version }}
          body: |
            **Sha256 checksums**

            ```
                ${{ needs.build-x86_64.outputs.hash }}
                ${{ needs.build-x86_64-musl.outputs.hash }}
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload x86_64 asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: void-packages/hostdir/binpkgs/${{ needs.build-x86_64.outputs.filename }}
          asset_name: ${{ needs.build-x86_64.outputs.filename }}
          asset_content_type: application/zstd

      - name: Upload x86_64-musl asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: void-packages/hostdir/binpkgs/${{ needs.build-x86_64-musl.outputs.filename }}
          asset_name: ${{ needs.build-x86_64-musl.outputs.filename }}
          asset_content_type: application/zstd

  clean:
    name: Cleanup
    runs-on: [ self-hosted ]
    needs: [ setup, build-x86_64, build-x86_64-musl, release ]
    if: always() && needs.setup.result == 'success'
    steps:
      - name: Unmount local cache
        id: unmount
        run: |
          sync; umount void-packages/hostdir/ccache
