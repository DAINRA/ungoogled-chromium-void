diff --git a/src/capi/io.rs b/src/capi/io.rs
index 23ca0788..b8ea4c08 100644
--- a/third_party/crabbyavif/src/src/capi/io.rs
+++ b/third_party/crabbyavif/src/src/capi/io.rs
@@ -207,7 +207,7 @@ impl Drop for avifIOWrapper {
 }
 
 impl crate::decoder::IO for avifIOWrapper {
-    #[cfg_attr(feature = "disable_cfi", no_sanitize(cfi))]
+    #[cfg_attr(feature = "disable_cfi", sanitize(cfi = "off"))]
     fn read(&mut self, offset: u64, size: usize) -> AvifResult<&[u8]> {
         // SAFETY: Calling into a C function.
         let res = unsafe {
diff --git a/src/lib.rs b/src/lib.rs
index 792d8805..d10b3504 100644
--- a/third_party/crabbyavif/src/src/lib.rs
+++ b/third_party/crabbyavif/src/src/lib.rs
@@ -13,7 +13,7 @@
 // limitations under the License.
 
 #![deny(unsafe_op_in_unsafe_fn)]
-#![cfg_attr(feature = "disable_cfi", feature(no_sanitize))]
+#![cfg_attr(feature = "disable_cfi", feature(sanitize))]
 
 #[macro_use]
 mod internal_utils;
diff --git a/src/reformat/libyuv.rs b/src/reformat/libyuv.rs
index dd129645..cbd4d2de 100644
--- a/third_party/crabbyavif/src/src/reformat/libyuv.rs
+++ b/third_party/crabbyavif/src/src/reformat/libyuv.rs
@@ -372,7 +372,7 @@
 // Returns Ok(Some(false)) if only YUV was converted and alpha
 // needs to be imported separately.
 // Returns Ok(None) if the conversion is not implemented.
-#[cfg_attr(feature = "disable_cfi", no_sanitize(cfi))]
+#[cfg_attr(feature = "disable_cfi", sanitize(cfi = "off"))]
 pub(crate) fn yuv_to_rgb(image: &image::Image, rgb: &mut rgb::Image) -> AvifResult<Option<bool>> {
     if (rgb.depth != 8 && rgb.depth != 10) || !image.depth_valid() {
         return Ok(None); // Not implemented.
--- a/third_party/crabbyavif/src/src/reformat/libyuv.rs
+++ b/third_party/crabbyavif/src/src/reformat/libyuv.rs
@@ -833,7 +833,7 @@
     }
 }
 
-#[cfg_attr(feature = "disable_cfi", no_sanitize(cfi))]
+#[cfg_attr(feature = "disable_cfi", sanitize(cfi = "off"))]
 pub(crate) fn rgb_to_yuv(rgb: &rgb::Image, image: &mut image::Image) -> AvifResult<Option<()>> {
     let conversion_function = match rgb_to_yuv_conversion_function(rgb, image) {
         Some(conversion_function) => conversion_function,
--- a/third_party/crabbyavif/BUILD.gn
+++ b/third_party/crabbyavif/BUILD.gn
@@ -202,7 +202,7 @@
 
   # Required for disable_cfi feature.
   configs -= [ "//build/config/compiler:disallow_unstable_features" ]
-  rustflags = [ "-Zallow-features=no_sanitize" ]
+  rustflags = [ "-Zallow-features=sanitize" ]
 
   public_deps = [ ":header_files" ]
   deps = [
